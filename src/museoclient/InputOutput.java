/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package museoclient;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import museocommon.DataClient;
import museocommon.DataUser;
import museocommon.MuseoInt;

/**
 *
 * @author pinedo
 */
public class InputOutput extends javax.swing.JInternalFrame {

    DefaultTableModel dtm;

    MuseoInt connect;
    List<DataUser> response = null;

    public InputOutput(MuseoInt connect) {
        initComponents();
        dtm = (DefaultTableModel) tblRecords.getModel();
        this.connect = connect;
        try {
            setTable();
        } catch (RemoteException ex) {
            Logger.getLogger(InputOutput.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void setTable() throws RemoteException {
        List<DataClient> dataTable = connect.getAllClient();
        Object[] obj = new Object[4];

        for (DataClient row : dataTable) {
            obj[0] = row.getId();
            obj[1] = row.getName();
            obj[2] = row.getAge();
            obj[3] = row.getStatus();
            dtm.addRow(obj);
        }
    }

    /**
     * Creates new form InputOutput
     */
    public InputOutput() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnInput = new javax.swing.JButton();
        btnSalida = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecords = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JLabel();
        txtTicket = new javax.swing.JTextField();

        jLabel1.setText("Nombre apellido");

        jLabel2.setText("Edad");

        btnInput.setText("Ingreso");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        btnSalida.setText("Salida");
        btnSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalidaActionPerformed(evt);
            }
        });

        jLabel3.setText("# ticket");

        tblRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ticket", "Nombre Apellido", "Edad", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRecordsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRecords);

        jLabel5.setText("Estado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel3))
                            .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtStatus))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(75, 75, 75)
                                .addComponent(btnInput)
                                .addGap(18, 18, 18)
                                .addComponent(btnSalida)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInput)
                    .addComponent(btnSalida)
                    .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtStatus))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        List<DataClient> response = null;

        if (!txtName.getText().toString().isEmpty() && !txtAge.getText().toString().isEmpty()) {

            Object[] obj = new Object[4];
            try {

                response = connect.add(MuseoClient.listUser.get(0).getId(), txtName.getText().toString(), Integer.parseInt(txtAge.getText()));

                if (response != null) {
                    obj[0] = response.get(0).getId();
                    obj[1] = response.get(0).getName();
                    obj[2] = response.get(0).getAge();
                    obj[3] = response.get(0).getStatus();
                    txtTicket.setText(String.valueOf(response.get(0).getId()));

                    dtm.addRow(obj);
                    txtTicket.setText("");
                    txtName.setText("");
                    txtAge.setText("");
                    txtStatus.setText("Registrado");
                } else {
                    txtStatus.setText("Problemas con la ejecucion!");
                }
            } catch (RemoteException ex) {
                Logger.getLogger(InputOutput.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            txtStatus.setText("Campos vacios");
        }


    }//GEN-LAST:event_btnInputActionPerformed

    private void tblRecordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRecordsMouseClicked
        int index = tblRecords.getSelectedRow();
        String id = dtm.getValueAt(index, 0).toString();
        String name = dtm.getValueAt(index, 1).toString();
        String age = dtm.getValueAt(index, 2).toString();

        txtTicket.setText(id);
        txtName.setText(name);
        txtAge.setText(age);

    }//GEN-LAST:event_tblRecordsMouseClicked

    private void btnSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalidaActionPerformed
        boolean status = false;
        if (!txtTicket.getText().toString().isEmpty()) {

            try {

                status = connect.modify(Integer.parseInt(txtTicket.getText().toString()), "old");

                if (status) {
                    dtm.setValueAt("old", Integer.parseInt(txtTicket.getText().toString()), 3);
                    txtTicket.setText("");
                    txtName.setText("");
                    txtAge.setText("");
                    txtStatus.setText("Registrado");
                } else {
                    txtStatus.setText("Problemas con la ejecucion!");
                }
            } catch (RemoteException ex) {
                Logger.getLogger(InputOutput.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            txtStatus.setText("Campos vacios");
        }
    }//GEN-LAST:event_btnSalidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRecords;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel txtStatus;
    private javax.swing.JTextField txtTicket;
    // End of variables declaration//GEN-END:variables
}
